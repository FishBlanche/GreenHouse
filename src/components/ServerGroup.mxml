<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" width="400" height="300" addedToStage="to_stage()"  >
	<fx:Script>
		<![CDATA[
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			import mx.messaging.ChannelSet;
			import mx.messaging.channels.AMFChannel;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.remoting.RemoteObject;
			import mx.utils.StringUtil;
			
			import spark.managers.PersistenceManager;
			import spark.skins.mobile.TextInputSkin;
			private var myAMF:AMFChannel=new AMFChannel();
			private var channelSet:ChannelSet=new ChannelSet;
			private var ro:RemoteObject = new RemoteObject();
			private var ipReg:RegExp =/^(1\d{2}|2[0-4]\d|25[0-5]|[1-9]\d|[1-9])\.(1\d{2}|2[0-4]\d|25[0-5]|[1-9]\d|\d)\.(1\d{2}|2[0-4]\d|25[0-5]|[1-9]\d|\d)\.(1\d{2}|2[0-4]\d|25[0-5]|[1-9]\d|\d)$/ ;
			private var portReg:RegExp =/^[1-9]{1}[0-9]{1,}$/ ;
			private function to_stage():void
			{
				connect_btn.includeInLayout=true;
				connect_btn.visible=true;
				lmessage.includeInLayout=false;
				lmessage.visible=false;
				
				var persistencemanager:PersistenceManager=new PersistenceManager();
				if(persistencemanager.load())
				{
					if(persistencemanager.getProperty("serverIp"))
					{
						 ipaddr.text=String(persistencemanager.getProperty("serverIp"));
					}
					if(persistencemanager.getProperty("serverPort"))
					{
						 iport.text=String(persistencemanager.getProperty("serverPort"));
					}
				 
				}
			}
			private function enter_submit():void{
				lmessage.includeInLayout=true;
				lmessage.visible=true;
				lmessage.text="正在验证----";
				connect_btn.includeInLayout=false;
				connect_btn.visible=false;
				 
				if(ipReg.test(ipaddr.text)&&portReg.test(iport.text)){
		         var persistencemanager:PersistenceManager=new PersistenceManager();
				if(persistencemanager.load())
				{
				   persistencemanager.setProperty("serverAddress","http://"+ipaddr.text+":"+iport.text+"/greenhouse-server/messagebroker/amf");
				   persistencemanager.setProperty("serverIp",ipaddr.text);
				   persistencemanager.setProperty("serverPort",iport.text);
				   persistencemanager.save();
				   lmessage.text="设置成功!";
				}
				else
				{
					lmessage.text="设置失败!";
				}
				}
				else{
				 
				lmessage.text="格式有误!";
				} 
			}
			 
		]]>
	</fx:Script>
	<s:states>
		<s:State name="default" />
		<s:State name="nodefaut" />
		
	</s:states>
	<s:BorderContainer width="100%" height="100%" horizontalCenter="0" verticalCenter="0">
		<s:VGroup top="3" width="100%" height="100%" horizontalAlign="center" verticalAlign="middle">
			<s:HGroup horizontalAlign="center" height="30%" width="100%">
				<s:Label  verticalAlign="middle" textAlign="center" color="#999999" backgroundAlpha="0" text="IP:" height="100%" fontFamily="微软雅黑" fontSize="15"  width="30%"/>
				<s:TextInput includeIn="default" itemCreationPolicy="immediate" skinClass="spark.skins.mobile.TextInputSkin" color="#999999" verticalCenter="0"   id="ipaddr"  width="70%" height="100%" fontFamily="微软雅黑" fontSize="15" borderVisible="false"/>
			</s:HGroup>
			<s:HGroup horizontalAlign="center" height="30%" width="100%">
				<s:Label verticalAlign="middle" textAlign="center" color="#999999" backgroundAlpha="0" text="端口:" height="100%" width="30%" fontFamily="微软雅黑" fontSize="15"/>
				<s:TextInput includeIn="default" itemCreationPolicy="immediate" skinClass="spark.skins.mobile.TextInputSkin" verticalCenter="0"   color="#999999" id="iport" height="100%" width="70%" fontFamily="微软雅黑" fontSize="15"  borderVisible="false"/>
			</s:HGroup>
			<s:HGroup horizontalAlign="center" height="40%" width="100%">
				<s:Button  includeIn="default" itemCreationPolicy="immediate" click="enter_submit()" id="connect_btn" color="#999999" label="保存" height="100%" width="100%" skinClass="skins.LoginBtnSkin" fontFamily="微软雅黑" fontSize="15"/>
				<s:Label includeIn="default" itemCreationPolicy="immediate" visible="false"  includeInLayout="false" id="lmessage" color="#F00000" />
			</s:HGroup>
		</s:VGroup>
		
	</s:BorderContainer>
	
</s:Group>
