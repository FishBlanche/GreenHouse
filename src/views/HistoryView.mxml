<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" xmlns:mx="library://ns.adobe.com/flex/mx"   backgroundAlpha="0.3" initialize="init()" creationComplete="create()">
	<fx:Declarations>
		<mx:SeriesSlide  id="slide" direction="right"  duration="200"   />
		<mx:SolidColorStroke id="chartStroke" color="black" weight="1" alpha="0.7"/>
		 
		<mx:SolidColorStroke id = "s1" color="#f47920" weight="0.6"/>
		<mx:SolidColorStroke id = "s2" color="#5c7a29" weight="0.6"/>
		<mx:SolidColorStroke id = "s3" color="#f47920" weight="0.6"/>
		<mx:SolidColorStroke id = "s4" color="#5c7a29" weight="0.6"/>
		<mx:SolidColorStroke id = "s5" color="#ed1941" weight="0.6"/>
		<mx:SolidColorStroke id = "s6" color="#1d953f" weight="0.6"/>
		<mx:SolidColorStroke id = "s7" color="#005344" weight="0.6"/>
		<mx:SolidColorStroke id = "s8" color="#f47920" weight="0.6"/>
		 
		<mx:SolidColor id="circleFill" color="#f47920" alpha="1"/>
	</fx:Declarations>
	<fx:Style>
		@namespace "library://ns.adobe.com/flex/spark";
		.BigFont
		{
			fontSize:13;
		}
	</fx:Style>
	<fx:Script>
		<![CDATA[
		    import mx.collections.ArrayCollection;
			import mx.core.FlexGlobals;
			import mx.messaging.ChannelSet;
			import mx.messaging.channels.AMFChannel;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.remoting.RemoteObject;
			
			import spark.components.Image;
			import spark.managers.PersistenceManager;
			import spark.transitions.SlideViewTransition;
			
			import components.BigFontLegendItem;
			
			import model.ParaInfo;
			private	var slideTrans:SlideViewTransition=new SlideViewTransition;
			private var myAMF:AMFChannel=new AMFChannel;
			private var channelSet:ChannelSet=new ChannelSet;
			private var ro:RemoteObject = new RemoteObject;
			private var moteMap:Dictionary ;
			private	 var tempInfo:ArrayCollection  = new ArrayCollection;  //第一层树结点数据
			private	 var humiInfo:ArrayCollection  = new ArrayCollection;  //第一层树结点数据
			private	 var stempInfo:ArrayCollection  = new ArrayCollection;  //第一层树结点数据
			private	 var shumiInfo:ArrayCollection  = new ArrayCollection;  //第一层树结点数据
			private	 var coInfo:ArrayCollection  = new ArrayCollection;  //第一层树结点数据
			private	 var phInfo:ArrayCollection  = new ArrayCollection;  //第一层树结点数据
			private	 var co2Info:ArrayCollection  = new ArrayCollection;  //第一层树结点数据
			private	 var lInfo:ArrayCollection  = new ArrayCollection;  //第一层树结点数据
			private function init():void
			{
				 var TH_ID:String="";
				 var STH_ID:String="";
				 var CO_ID:String="";
				 var PH_ID:String="";
				 var CO2_ID:String="";
				 var L_ID:String="";
				 slideTrans.direction="right";
				moteMap=data as Dictionary;
				for(var e:Object in moteMap){ 
					if(moteMap[e]==FlexGlobals.topLevelApplication.selectedArea)
					{
						trace(e.id+"||"+e.name);
						switch(e.name)
						{
							case "HT": TH_ID=String(e.id);
									   break;
							case "CO2": CO2_ID=String(e.id);
								      break;
							case "CO": CO_ID=String(e.id);
								      break;
							case "L": L_ID=String(e.id);
								      break;
							case "SHT":STH_ID=String(e.id); 
								      break;
							case "PH": PH_ID=String(e.id);
								     break;
							default:break; 
						}
					}
				}
				trace(TH_ID+","+STH_ID+","+CO_ID+","+PH_ID+","+CO2_ID+","+L_ID);
				var persistencemanager:PersistenceManager=new PersistenceManager();
				if(persistencemanager.load())
				{
					if(persistencemanager.getProperty("serverAddress"))
					{
						myAMF.url=persistencemanager.getProperty("serverAddress").toString();
						
						channelSet.addChannel(myAMF); 
						ro.channelSet = channelSet;
						ro.destination="FindLastSense";
						ro.addEventListener(ResultEvent.RESULT,result_Handle);
						ro.addEventListener(FaultEvent.FAULT,faultHandle);
						ro.GetLastSense(TH_ID,STH_ID,CO_ID,PH_ID,CO2_ID,L_ID);
						FlexGlobals.topLevelApplication.GlobalBusy=false;
					}
					else
					{
						FlexGlobals.topLevelApplication.GlobalBusy=true;
					}
				}
			}
			
			private function create():void
			{
				 
			}
			private  function  faultHandle(event:FaultEvent):void
			{ 
				trace(" request error");
				trace(event.fault.faultString);
				trace(event.fault.faultDetail);
			}
			private function result_Handle(event:ResultEvent):void{
				tempInfo.removeAll();
				humiInfo.removeAll();
				stempInfo.removeAll();
				shumiInfo.removeAll();
				coInfo.removeAll();
				phInfo.removeAll();
				co2Info.removeAll();
				lInfo.removeAll();
				var i:int=1;
				for(var e:Object in event.result ){
					 switch(i)
					 {
						 case 1:tempInfo=event.result[e] as ArrayCollection;
							   templs.dataProvider=tempInfo;
							  
							   trace("tempInfo"+tempInfo.length);
							     break;
						 case 2:humiInfo=event.result[e] as ArrayCollection;
							    humils.dataProvider=humiInfo;
								trace("humiInfo"+humiInfo.length);
							    break;
						 case 3:stempInfo=event.result[e] as ArrayCollection;
							 stempls.dataProvider=stempInfo;
							 trace("stempInfo"+stempInfo.length);
							    break;
						 case 4:shumiInfo=event.result[e] as ArrayCollection;
							  shumils.dataProvider=shumiInfo;
							  trace("shumiInfo"+shumiInfo.length);
							    break;
						 case 5:coInfo=event.result[e] as ArrayCollection;
							 //trace("coInfo"+coInfo.length);
							 COls.dataProvider=coInfo;
							 
							  trace("coInfo"+coInfo.length);
							   break;
						 case 6:phInfo=event.result[e] as ArrayCollection;
							     PHls.dataProvider=phInfo;
								 trace("phInfo"+phInfo.length);
							    break;
						 case 7:co2Info=event.result[e] as ArrayCollection;
							 CO2ls.dataProvider=co2Info;
							 trace("co2Info"+co2Info.length);
							    break;
						 case 8:lInfo=event.result[e] as ArrayCollection;
							// Lls.dataProvider=lInfo;
							 Lls.dataProvider=lInfo;
							 trace("Lls"+lInfo.length);
							    break;
						 default:trace("一天数据出错！！！");
					 }
					 i++;
				}
			}
		]]>
	</fx:Script>
	<s:navigationContent>
		<s:Button icon="@Embed('assets/back.png')" click="navigator.popView()"  height="55"/>
	</s:navigationContent>
	 
	<s:actionContent>
		<s:Label text="区域{FlexGlobals.topLevelApplication.selectedArea}" color="halogreen"   verticalAlign="middle" backgroundAlpha="0" height="55" horizontalCenter="0" fontSize="25"  />
	</s:actionContent>
	<s:VGroup width="98%"  height="100%" horizontalAlign="center" verticalAlign="middle">
		<mx:ColumnChart   color="black" fontSize="18" id="lineChart1" 	height="33%" width="100%" 	paddingLeft="5" paddingRight="5" 	showDataTips="true"  >        
		 
			<mx:verticalAxis>
				<mx:LinearAxis  baseAtZero="true" id="la1"/>
			</mx:verticalAxis>
			<mx:series>
				 <mx:LineSeries  id="templs"       fill="{circleFill}"    filters="[]" radius="2"    xField="timestamparrive_tm" yField="value" displayName="温度(°C)"  lineStroke="{s1}">
					 <mx:horizontalAxis>
						 <mx:CategoryAxis displayName="时间"      id="ca11" categoryField="timestamparrive_tm"/>
					 </mx:horizontalAxis>
				 </mx:LineSeries>
				<mx:LineSeries  id="humils"     fill="{circleFill}"    filters="[]" radius="2"    xField="timestamparrive_tm" yField="value" displayName="湿度(%RH)"  lineStroke="{s2}">
					<mx:horizontalAxis>
						<mx:CategoryAxis displayName="时间"      id="ca12" categoryField="timestamparrive_tm"/>
					</mx:horizontalAxis>
				</mx:LineSeries>
				<mx:LineSeries  id="stempls"     fill="{circleFill}"    filters="[]" radius="2"    xField="timestamparrive_tm" yField="value" displayName="土壤温度(°C)"  lineStroke="{s3}">
					<mx:horizontalAxis>
						<mx:CategoryAxis displayName="时间"      id="ca13" categoryField="timestamparrive_tm"/>
					</mx:horizontalAxis>
				</mx:LineSeries>
				<mx:LineSeries  id="shumils"    fill="{circleFill}"    filters="[]" radius="2"    xField="timestamparrive_tm" yField="value" displayName="土壤湿度(%RH)"  lineStroke="{s4}">
					<mx:horizontalAxis>
						<mx:CategoryAxis displayName="时间"      id="ca14" categoryField="timestamparrive_tm"/>
					</mx:horizontalAxis>
				</mx:LineSeries>
			</mx:series>
			<mx:horizontalAxisRenderers>
				 <mx:AxisRenderer     placement="bottom" canDropLabels="true"    axis="{ca11}"  axisStroke="{chartStroke}"  tickStroke="{chartStroke}"/>
				 
			</mx:horizontalAxisRenderers>
			<mx:verticalAxisRenderers>
				<mx:AxisRenderer placement="left"  axis="{la1}"  axisStroke="{chartStroke}"  tickStroke="{chartStroke}"/>
			</mx:verticalAxisRenderers>
		</mx:ColumnChart>
		<mx:Legend legendItemClass="components.BigFontLegendItem"   direction="horizontal" color="black" fontSize="20" dataProvider="{lineChart1}"/>
		<mx:ColumnChart   color="black" fontSize="18" id="lineChart2" 	height="33%" width="100%" 	paddingLeft="5" paddingRight="5" 	showDataTips="true"  >        
			
			<mx:verticalAxis>
				<mx:LinearAxis  baseAtZero="true" id="la2"/>
			</mx:verticalAxis>
			<mx:series>
				
				<mx:LineSeries  id="COls"    fill="{circleFill}"    filters="[]" radius="2"    xField="timestamparrive_tm" yField="value" displayName="CO(ppm)"  lineStroke="{s5}">
					<mx:horizontalAxis>
						<mx:CategoryAxis displayName="时间"       id="ca21" categoryField="timestamparrive_tm"/>
					</mx:horizontalAxis>
				</mx:LineSeries>
				<mx:LineSeries  id="PHls"   fill="{circleFill}"    filters="[]" radius="2"    xField="timestamparrive_tm" yField="value" displayName="PH"  lineStroke="{s6}">
					<mx:horizontalAxis>
						<mx:CategoryAxis displayName="时间"       id="ca22" categoryField="timestamparrive_tm"/>
					</mx:horizontalAxis>
				</mx:LineSeries>
				 
			</mx:series>
			<mx:horizontalAxisRenderers>
				<mx:AxisRenderer     placement="bottom" canDropLabels="true"    axis="{ca21}"  axisStroke="{chartStroke}"  tickStroke="{chartStroke}"/>
				 
			</mx:horizontalAxisRenderers>
			<mx:verticalAxisRenderers>
				<mx:AxisRenderer placement="left"  axis="{la2}"  axisStroke="{chartStroke}"  tickStroke="{chartStroke}"/>
			</mx:verticalAxisRenderers>
		</mx:ColumnChart>
		<mx:Legend legendItemClass="components.BigFontLegendItem"   direction="horizontal" color="black" fontSize="20" dataProvider="{lineChart2}"/>
		<mx:ColumnChart   color="black" fontSize="18" id="lineChart3" 	height="33%" width="100%" 	paddingLeft="5" paddingRight="5" 	showDataTips="true"  >        
			
			<mx:verticalAxis>
				<mx:LinearAxis  baseAtZero="true" id="la3"/>
			</mx:verticalAxis>
			<mx:series>
				<mx:LineSeries  id="CO2ls"    fill="{circleFill}"    filters="[]" radius="2"    xField="timestamparrive_tm" yField="value" displayName="CO2(ppm)"  lineStroke="{s7}">
					<mx:horizontalAxis>
						<mx:CategoryAxis displayName="时间"      id="ca31" categoryField="timestamparrive_tm"/>
					</mx:horizontalAxis>
				</mx:LineSeries>
				<mx:LineSeries  id="Lls"   fill="{circleFill}"    filters="[]" radius="2"    xField="timestamparrive_tm" yField="value" displayName="光照(lux)"  lineStroke="{s8}">
					<mx:horizontalAxis>
						<mx:CategoryAxis displayName="时间"      id="ca32" categoryField="timestamparrive_tm"/>
					</mx:horizontalAxis>
				</mx:LineSeries>
				
			</mx:series>
			<mx:horizontalAxisRenderers>
				<mx:AxisRenderer     placement="bottom"  canDropLabels="true"   axis="{ca31}"  axisStroke="{chartStroke}"  tickStroke="{chartStroke}"/>
			</mx:horizontalAxisRenderers>
			<mx:verticalAxisRenderers>
				<mx:AxisRenderer placement="left"  axis="{la3}"  axisStroke="{chartStroke}"  tickStroke="{chartStroke}"/>
			</mx:verticalAxisRenderers>
		</mx:ColumnChart>
		<mx:Legend legendItemClass="components.BigFontLegendItem"   direction="horizontal" color="black" fontSize="20" dataProvider="{lineChart3}"/>
	</s:VGroup>
	
</s:View>
